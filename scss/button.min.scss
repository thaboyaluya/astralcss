@use './mixins/buttons' as *;
@use 'variables' as *;
@use 'sass:color';




.button{
@include button();
background-color: var(--body-bg);
color: var(--body-color);
border: 1px solid var(--border-color);
}
.button:focus,.button:active{
box-shadow: 0 0 0 .15rem rgba($primary-color, .3); 
}

@each $name,$value in $theme-colors{
.button.button-#{$name}{
@if $name =='light'{
    background-color: color.mix($as-gray-100, $white, $weight: 20%, $method: null);
    color: $black ;
    border: 1px solid #f0f0f0;
}@else{
    background-color: var(--#{$name}-color);
    color: $white;
    border: 1px solid var(--#{$name}-color);
}
   }   
}

a.button:hover{
text-decoration: none;
color: inherit;
}

@each $name,$value in $theme-colors{
a.button.button-#{$name}:hover{
text-decoration: none !important;
color: $white;
@if $name =='light'{
    color: var(--primary-color);
}

   }
}

@each $name,$value in $theme-colors{
    .button.button-#{$name}:focus,  .button.button-#{$name}:active{
    box-shadow: 0 0 0 .15rem rgba($value, .3);
   }
}


.button-sm{
    @include small-button()
}
.button-lg{
    @include large-button()
}

   

.button.button-outline{
    @include button(); 
    background-color: $white;
    color: var(--primary-color);
}
.button.button-outline:hover{
    @include button(); 
    background-color: var(--primary-color);
    color: $white;
}

@each $name,$value in $theme-colors{
    .button.button-#{$name}.button-outline{

        @if $name =='light'{
            background-color: var(--body-bg);
            color: inherit;
        }@else{
            background-color: var(--body-bg);
            color: var(--#{$name}-color);

        }

   }
   .button.button-#{$name}.button-outline:hover{
    @if $name =='light'{
        background-color:#f0f0f0;
        color: $black;
    }@else{
        background-color:var(--#{$name}-color);
        color: $white;
    }
}
} 

@each $name,$value in $theme-colors{
    .button.button-#{$name}:disabled{
        @if $name=='light'{
            background-color: #f0f0f0;
            border-color: $as-gray-100; 
            pointer-events: none;
        }@else{
            background-color: rgba($value,.3);
            border-color: rgba($value,.3);
            pointer-events: none;
        }
   }
}



.button-grouped {
    display: flex;
    justify-content: flex-start;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap
    }
    
    .button-grouped .button:first-child:not(:last-child) {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0
    }
    
    .button-grouped .button:not(:first-child):not(:last-child) {
    border-radius: 0;
    margin-left: -.05rem
    }
    
    .button-grouped .button:last-child:not(:first-child) {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    margin-left: -.05rem
    }
    
    
    
    .button-grouped .button.active {
    background: color.adjust($primary-color, $lightness: -20%);
    color: $white;
    text-decoration: none;
    border: none;
    }

