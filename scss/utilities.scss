
@use './mixins/container' as *;
@use 'variables' as *;
@use 'sass:color';
@use './mixins/breakpoints' as *;
@use "sass:map";


.container {
    @include container();
    max-width:100%;
}


@include media-breakpoint-up(sm, $breakpoints: $grid-breakpoints) {
    $infix: breakpoint-infix(sm, $grid-breakpoints);
    .container {
        max-width:540px;
    }
  }

  @include media-breakpoint-up(md, $breakpoints: $grid-breakpoints) {
    $infix: breakpoint-infix(md, $grid-breakpoints);
    .container {
        max-width: 720px;
    }
  } 
  @include media-breakpoint-up(lg, $breakpoints: $grid-breakpoints) {
    $infix: breakpoint-infix(lg, $grid-breakpoints);
    .container {
        max-width: 960px;
    }
  }
  @include media-breakpoint-up(xl, $breakpoints: $grid-breakpoints) {
    $infix: breakpoint-infix(xl, $grid-breakpoints);
    .container {
        max-width: 1140px;
    }
  }




.container-fluid {
    @include container();
    width:100%;
}

@each $level,$color in $corals{
    .text-coral-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $reds{
    .text-red-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $pinks{
    .text-pink-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $oranges{
    .text-orange-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $yellows{
    .text-yellow-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $purples{
    .text-purple-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $greens{
    .text-green-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $blues{
    .text-blue-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $grays{
    .text-gray-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}

/* TEXT COLOR */

@each $level,$color in $corals{
    .text-coral-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $reds{
    .text-red-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $pinks{
    .text-pink-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $oranges{
    .text-orange-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $yellows{
    .text-yellow-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $purples{
    .text-purple-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $greens{
    .text-green-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $blues{
    .text-blue-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}
@each $level,$color in $grays{
    .text-gray-#{$level}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: $color;
    }
}

@each $name,$color in $theme-colors{
    .text-#{$name}{
     --as-text-opacity: 1;
     opacity: var(--as-text-opacity);
     color: var(--#{$name}-color);
    }
}

/* BACKGROUND COLOR */

@each $level,$color in $corals{
    .bg-coral-#{$level}{
     --as-bg-opacity: 1;
     opacity: var(--as-bg-opacity);
     background-color: $color;
    }
}
@each $level,$color in $reds{
    .bg-red-#{$level}{
     --as-bg-opacity: 1;
     opacity: var(--as-bg-opacity);
     background-color: $color;
    }
}
@each $level,$color in $pinks{
    .bg-pink-#{$level}{
     --as-bg-opacity: 1;
     opacity: var(--as-bg-opacity);
     background-color: $color;
    }
}
@each $level,$color in $oranges{
    .bg-orange-#{$level}{
     --as-bg-opacity: 1;
     opacity: var(--as-bg-opacity);
     background-color: $color;
    }
}
@each $level,$color in $yellows{
    .bg-yellow-#{$level}{
     --as-bg-opacity: 1;
     opacity: var(--as-bg-opacity);
     background-color: $color;
    }
}
@each $level,$color in $purples{
    .bg-purple-#{$level}{
     --as-bg-opacity: 1;
     opacity: var(--as-bg-opacity);
     background-color: $color;
    }
}
@each $level,$color in $greens{
    .bg-green-#{$level}{
     --as-bg-opacity: 1;
     opacity: var(--as-bg-opacity);
     background-color: $color;
    }
}
@each $level,$color in $blues{
    .bg-blue-#{$level}{
     --as-bg-opacity: 1;
     opacity: var(--as-bg-opacity);
     background-color: $color;
    }
}
@each $level,$color in $grays{
    .bg-gray-#{$level}{
     --as-bg-opacity: 1;
     opacity: var(--as-bg-opacity);
     background-color: $color;
    }
}

@each $name,$color in $theme-colors{
    .bg-#{$name}{
     --as-bg-opacity: 1;
     opacity: var(--as-bg-opacity);
     background-color: $color;
    }
}


@for $i from 1 through 20{
 .text-opacity-#{$i * 5} {
    --as-text-opacity: #{($i * 5) * 0.01};
  } 
}
@for $i from 1 through 20{
    .bg-opacity-#{$i * 5} {
    --as-bg-opacity: #{($i * 5) * 0.01};
     } 
}



    @each $breakpoint in map.keys($grid-breakpoints) {
        @include media-breakpoint-up($breakpoint) {
          $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
 
.float#{$infix}-left {
    float: left!important
    }
    
    .float#{$infix}-right {
    float: right!important
    }
    
    .float#{$infix}-none {
    float: none!important
    }
        }
      }


@each $breakpoint in map.keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
  
      .flex#{$infix}-row            { flex-direction: row !important; }
      .flex#{$infix}-column         { flex-direction: column !important; }
      .flex#{$infix}-row-reverse    { flex-direction: row-reverse !important; }
      .flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }
  
      .flex#{$infix}-wrap         { flex-wrap: wrap !important; }
      .flex#{$infix}-nowrap       { flex-wrap: nowrap !important; }
      .flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }
      .flex#{$infix}-fill         { flex: 1 1 auto !important; }
      .flex#{$infix}-grow-0       { flex-grow: 0 !important; }
      .flex#{$infix}-grow-1       { flex-grow: 1 !important; }
      .flex#{$infix}-shrink-0     { flex-shrink: 0 !important; }
      .flex#{$infix}-shrink-1     { flex-shrink: 1 !important; }
  
      .justify-content#{$infix}-start   { justify-content: flex-start !important; }
      .justify-content#{$infix}-end     { justify-content: flex-end !important; }
      .justify-content#{$infix}-center  { justify-content: center !important; }
      .justify-content#{$infix}-between { justify-content: space-between !important; }
      .justify-content#{$infix}-around  { justify-content: space-around !important; }
      .justify-content#{$infix}-evenly  { justify-content: space-evenly !important; }
  
      .align-items#{$infix}-start    { align-items: flex-start !important; }
      .align-items#{$infix}-end      { align-items: flex-end !important; }
      .align-items#{$infix}-center   { align-items: center !important; }
      .align-items#{$infix}-baseline { align-items: baseline !important; }
      .align-items#{$infix}-stretch  { align-items: stretch !important; }
  
      .align-content#{$infix}-start   { align-content: flex-start !important; }
      .align-content#{$infix}-end     { align-content: flex-end !important; }
      .align-content#{$infix}-center  { align-content: center !important; }
      .align-content#{$infix}-between { align-content: space-between !important; }
      .align-content#{$infix}-around  { align-content: space-around !important; }
      .align-content#{$infix}-stretch { align-content: stretch !important; }
      .align-content#{$infix}-evenly { align-content: space-evenly !important; }
  
      .align-self#{$infix}-auto     { align-self: auto !important; }
      .align-self#{$infix}-start    { align-self: flex-start !important; }
      .align-self#{$infix}-end      { align-self: flex-end !important; }
      .align-self#{$infix}-center   { align-self: center !important; }
      .align-self#{$infix}-baseline { align-self: baseline !important; }
      .align-self#{$infix}-stretch  { align-self: stretch !important; }
    }
  }


@each $name,$value in $positions{
    .#{$name}{
        position: $value !important;
    }
}

.fixed-top {
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    z-index: 1030;
  }
  
  .fixed-bottom {
    position: fixed;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1030;
  }

  .shadow-sm {
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
  }
  
  .shadow {
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
  }
  
  .shadow-lg {
    box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;
  }

  @for $i from 1 through 10{
    .w-#{$i * 10} {
       width: #{($i * 10%)} !important;
     } 
   }
   @for $i from 1 through 10{
    .h-#{$i * 10} {
       height: #{($i * 10%)} !important;
     } 
   }
.w-auto {
    width: auto !important;
  }
  .h-auto {
    height: auto !important;
  }
  .mw-100 {
    max-width: 100% !important;
  }
  
  .mh-100 {
    max-height: 100% !important;
  } 



  @each $breakpoint in map.keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
      @each $name,$value in $spacers{
        .m#{$infix}-#{$name}{
            margin: #{$value} !important;
        }

        .mt#{$infix}-#{$name}{
            margin-top: #{$value} !important;
        }
        .mb#{$infix}-#{$name}{
            margin-bottom: #{$value} !important;
        }
        .ml#{$infix}-#{$name}{
            margin-left: #{$value} !important;
        }
        .mr#{$infix}-#{$name}{
            margin-right: #{$value} !important;
        }
        .mx#{$infix}-#{$name}{
            margin-right: #{$value}  !important;
            margin-left: #{$value}  !important;
        }
        .my#{$infix}-#{$name}{
          margin-top: #{$value}  !important;
          margin-bottom: #{$value}  !important;
        }
    
        .p#{$infix}-#{$name}{
            padding: #{$value} !important;
        }
        .pt#{$infix}-#{$name}{
            padding-top: #{$value} !important;
        }
        .pb#{$infix}-#{$name}{
            padding-bottom: #{$value} !important;
        }
        .pl#{$infix}-#{$name}{
            padding-left: #{$value} !important;
        }
        .pr#{$infix}-#{$name}{
            padding-right: #{$value} !important;
        }
        .px#{$infix}-#{$name}{
          padding-left: #{$value}  !important;
          padding-right: #{$value}  !important;
        }
        .py#{$infix}-#{$name}{
          padding-top: #{$value}  !important;
          padding-bottom: #{$value}  !important;
        }
    
    }
    }
  }
  .mx-auto{
    margin:auto !important;
}


.text-monospace {
    font-family: $family-monospace;
  }
  .text-nowrap {
    white-space: nowrap !important;
  }
  .text-wrap {
    white-space: normal !important;
}
.text-break {
  word-wrap: break-word !important;
  word-break: break-word !important;
}
.text-italic{
  font-style: italic;
}
.text-weight-bold {
  font-weight: bolder!important
  }
  .text-weight-normal {
  font-weight: 400!important
  }
  
  .text-weight-light {
  font-weight: 300 !important
  }
  
  
@each $breakpoint in map.keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
        .text#{$infix}-left {
            text-align: left !important;
          }
          
          .text#{$infix}-right {
            text-align: right !important;
          }
          
          .text#{$infix}-center {
            text-align: center !important;
          }
          
          .text#{$infix}-justify {
            text-align: justify !important;
          }
          .text#{$infix}-lowercase {
            text-transform: lowercase !important;
          }
          
          .text#{$infix}-uppercase {
            text-transform: uppercase !important;
          }
          
          .text#{$infix}-capitalize {
            text-transform: capitalize !important;
          }
    }
  }


  .font-weight-light {
    font-weight: $text-weight-light !important;
  }
  
  .font-weight-normal {
    font-weight: $text-weight-normal !important;
  }
  .font-weight-semi-bold {
    font-weight:$text-weight-semibold !important;
  }
  
  .font-weight-bold {
    font-weight: $text-weight-bold !important;
  }
  .font-italic {
    font-style: italic !important;
  }



@each $name,$value in $theme-colors{
    a.text-#{$name}:hover,a.text-#{$name}:focus{
        color:color.adjust($value, $lightness: -10%) !important;
    }
}



  @each $breakpoint in map.keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
      .visible#{$infix} {
        visibility: visible !important;
      }
      
      .invisible#{$infix} {
        visibility: hidden !important;
      }
    }
  }


.cursor-default {
cursor: default;
}
.cursor-pointer{
cursor: pointer;
}
.cursor-move {
cursor: move
}

.cursor-wait {
cursor: wait
}

.cursor-text {
cursor: text
}

.cursor-zoom-in {
cursor: zoom-in
}

.cursor-zoom-out {
cursor: zoom-out
}

.cursor-not-allowed {
cursor: not-allowed
}

.cursor-auto {
cursor: auto
}
.cursor-none {
cursor: none;
}


@each $breakpoint in map.keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

      .d#{$infix}-none {
        display: none!important
        }
        .d#{$infix}-inline {
        display: inline!important
        }
        
        .d#{$infix}-inline-block {
        display: inline-block!important
        }
        
        .d#{$infix}-block {
        display: block!important
        }
        
        .d#{$infix}-table {
        display: table!important
        }
        
        .d#{$infix}-table-row {
        display: table-row!important
        }
        
        .d#{$infix}-table-cell {
        display: table-cell!important
        }
        
        .d#{$infix}-flex {
        display: flex!important
        }
        
        .d#{$infix}-inline-flex {
        display: inline-flex!important
        }
        
        .d#{$infix}-grid {
        display: grid!important
        }
    }
  }

.user-select-all {
-webkit-user-select: all!important;
-moz-user-select: all!important;
user-select: all!important
}

.user-select-auto {
-webkit-user-select: auto!important;
-moz-user-select: auto!important;
user-select: auto!important
}

.user-select-none {
-webkit-user-select: none!important;
-moz-user-select: none!important;
user-select: none!important
}
@for $i from 1 through 10{
    .opacity-#{$i * 10} {
       opacity: #{($i * 10%)};
     } 
}

    @each $breakpoint in map.keys($grid-breakpoints) {
        @include media-breakpoint-up($breakpoint) {
          $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
          .overflow#{$infix}-auto {
            overflow: auto!important
            }
            
            .overflow#{$infix}-hidden {
            overflow: hidden!important
            }
            
            .overflow#{$infix}-visible {
            overflow: visible!important
            }
            
            .overflow#{$infix}-scroll {
            overflow: scroll!important
            }
            
            
            .overflow#{$infix}-x-visible {
            overflow-x: visible!important
            }
            
            .overflow#{$infix}-y-visible {
            overflow-y: visible!important
            }
            
            .overflow#{$infix}-x-hidden {
            overflow-x: hidden!important
            }
            
            .overflow#{$infix}-y-hidden {
            overflow-y: hidden!important
            }
            
            
            .overflow#{$infix}-x-auto {
            overflow-x: auto!important
            }
            
            .overflow#{$infix}-y-auto {
            overflow-y: auto!important
            }
            
            .overflow#{$infix}-x-scroll {
            overflow-x: scroll!important
            }
            
            .overflow#{$infix}-y-scroll {
            overflow-y: scroll!important
            }        
          
        }
      }

.fs-1 {
font-size: 2.775rem!important
}
.fs-2 {
font-size: 2.475rem !important
}
.fs-3 {
font-size: 1.875rem!important
}
.fs-4 {
font-size: 1.275rem!important
}
.fs-5 {
font-size: 1.15rem!important
}
.fs-6 {
font-size: .85rem!important
}


@include media-breakpoint-up(md, $breakpoints: $grid-breakpoints) {
    $infix: breakpoint-infix(md, $grid-breakpoints);
    .fs-1 {
    font-size:2.9rem !important
    }
    .fs-2 {
    font-size: 2.6rem!important
    }
    .fs-3 {
    font-size: 2rem!important
    }
    .fs-4 {
    font-size: 1.4rem!important
    }
    .fs-5 {
    font-size: 1.25rem!important
    }  .fs-6 {
    font-size: 1rem!important
    }
}

 
    

.lh-1 {
line-height: 1!important
}

.lh-sm {
line-height: 1.25!important
}

.lh-base {
line-height: 1.5!important
}

.lh-lg {
line-height: 2!important
}

.text-decoration-line-through {
text-decoration: line-through!important
}

.text-decoration-none {
  text-decoration: none !important;
}

.text-small {
    font-size: 12px !important;
}
.align-baseline {
    vertical-align: baseline!important
    }

.align-top {
vertical-align: top!important
}

.align-middle {
vertical-align: middle!important
}

.align-bottom {
vertical-align: bottom!important
}

.align-text-bottom {
vertical-align: text-bottom!important
}

.align-text-top {
vertical-align: text-top!important
}
.img-responsive {
    max-width: 100%;
    height: auto;
    width: 100%
    }
.close-button:after{
      display: inline-block;
      content: "\00d7";
      font-size: 40px;
      cursor: pointer;
}  
.octicon {
  display: inline-block;
  overflow: visible !important;
  vertical-align: text-bottom;
  fill: currentColor
}